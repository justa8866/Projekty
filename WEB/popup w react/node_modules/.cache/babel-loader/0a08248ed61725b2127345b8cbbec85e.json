{"ast":null,"code":"import _classCallCheck from \"C:/Users/User/Desktop/POPUP/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/User/Desktop/POPUP/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"C:/Users/User/Desktop/POPUP/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:/Users/User/Desktop/POPUP/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\POPUP\\\\src\\\\modal_popup.jsx\";\nimport React, { Component, Fragment } from 'react';\nimport { Modal } from 'react-bootstrap';\nimport Registration from \"./pages/Registration\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar ModalPopup = /*#__PURE__*/function (_Component) {\n  _inherits(ModalPopup, _Component);\n\n  var _super = _createSuper(ModalPopup);\n\n  function ModalPopup(props) {\n    var _this;\n\n    _classCallCheck(this, ModalPopup);\n\n    _this = _super.call(this, props);\n\n    _this.isShowModal = function (status) {\n      _this.handleClose();\n\n      _this.setState({\n        showModal: status\n      });\n    };\n\n    _this.handleClose = function () {\n      _this.props.onPopupClose(false);\n    };\n\n    _this.state = {\n      showModal: false\n    };\n    return _this;\n  }\n\n  _createClass(ModalPopup, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return /*#__PURE__*/_jsxDEV(Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Modal, {\n          show: this.props.showModalPopup,\n          onHide: this.handleClose,\n          size: \"lg\",\n          \"aria-labelledby\": \"contained-modal-title-vcenter\",\n          centered: true,\n          children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n            closeButton: true,\n            children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n              id: \"sign-in-title\",\n              children: \"React Modal Pop up Example\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Registration, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"signUp\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Want to close the pop up?\", /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  className: \"link-button\",\n                  onClick: function onClick() {\n                    return _this2.isShowModal(true);\n                  },\n                  children: \" Close\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 40,\n                  columnNumber: 57\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }, this);\n    }\n  }]);\n\n  return ModalPopup;\n}(Component);\n\nexport default ModalPopup;","map":{"version":3,"sources":["C:/Users/User/Desktop/POPUP/src/modal_popup.jsx"],"names":["React","Component","Fragment","Modal","Registration","ModalPopup","props","isShowModal","status","handleClose","setState","showModal","onPopupClose","state","showModalPopup"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,KAAT,QAAsB,iBAAtB;AACA,OAAOC,YAAP,MAAyB,sBAAzB;;;IAEMC,U;;;;;AACF,sBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,8BAAMA,KAAN;;AADe,UAOnBC,WAPmB,GAOL,UAACC,MAAD,EAAY;AACtB,YAAKC,WAAL;;AACA,YAAKC,QAAL,CAAc;AAAEC,QAAAA,SAAS,EAAEH;AAAb,OAAd;AACH,KAVkB;;AAAA,UAYnBC,WAZmB,GAYL,YAAM;AAChB,YAAKH,KAAL,CAAWM,YAAX,CAAwB,KAAxB;AACH,KAdkB;;AAEf,UAAKC,KAAL,GAAa;AACTF,MAAAA,SAAS,EAAE;AADF,KAAb;AAFe;AAKlB;;;;WAYD,kBAAS;AAAA;;AACL,0BACI,QAAC,QAAD;AAAA,+BACI,QAAC,KAAD;AAAO,UAAA,IAAI,EAAE,KAAKL,KAAL,CAAWQ,cAAxB;AAAwC,UAAA,MAAM,EAAE,KAAKL,WAArD;AACI,UAAA,IAAI,EAAC,IADT;AAEI,6BAAgB,+BAFpB;AAGI,UAAA,QAAQ,MAHZ;AAAA,kCAKI,QAAC,KAAD,CAAO,MAAP;AAAc,YAAA,WAAW,MAAzB;AAAA,mCACI,QAAC,KAAD,CAAO,KAAP;AAAa,cAAA,EAAE,EAAC,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBALJ,eAUI,QAAC,KAAD,CAAO,IAAP;AAAA,oCACI,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAGI;AAAK,cAAA,SAAS,EAAC,QAAf;AAAA,qCACI;AAAA,qEAA4B;AAAQ,kBAAA,IAAI,EAAC,QAAb;AAAsB,kBAAA,SAAS,EAAC,aAAhC;AAA8C,kBAAA,OAAO,EAAE;AAAA,2BAAM,MAAI,CAACF,WAAL,CAAiB,IAAjB,CAAN;AAAA,mBAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAVJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ;AAwBH;;;;EA3CoBN,S;;AA8CzB,eAAgBI,UAAhB","sourcesContent":["import React, { Component, Fragment } from 'react';  \r\nimport { Modal } from 'react-bootstrap';  \r\nimport Registration from \"./pages/Registration\";\r\n  \r\nclass ModalPopup extends Component {  \r\n    constructor(props) {  \r\n        super(props);  \r\n        this.state = {  \r\n            showModal: false  \r\n        };  \r\n    }  \r\n  \r\n    isShowModal = (status) => {  \r\n        this.handleClose();  \r\n        this.setState({ showModal: status });  \r\n    }  \r\n  \r\n    handleClose = () => {  \r\n        this.props.onPopupClose(false);  \r\n    }  \r\n  \r\n  \r\n    render() {  \r\n        return (  \r\n            <Fragment>  \r\n                <Modal show={this.props.showModalPopup} onHide={this.handleClose}  \r\n                    size=\"lg\"  \r\n                    aria-labelledby=\"contained-modal-title-vcenter\"  \r\n                    centered  \r\n                >  \r\n                    <Modal.Header closeButton>  \r\n                        <Modal.Title id=\"sign-in-title\">  \r\n                            React Modal Pop up Example  \r\n                         </Modal.Title>  \r\n                    </Modal.Header>  \r\n                    <Modal.Body>  \r\n                        <Registration /> \r\n                        <hr />  \r\n                        <div className=\"signUp\">  \r\n                            <p>Want to close the pop up?<button type=\"button\" className=\"link-button\" onClick={() => this.isShowModal(true)}> Close</button></p>  \r\n                        </div>  \r\n                    </Modal.Body>  \r\n  \r\n                </Modal >  \r\n            </Fragment >  \r\n  \r\n        );  \r\n    }  \r\n}  \r\n  \r\nexport default (ModalPopup);  "]},"metadata":{},"sourceType":"module"}